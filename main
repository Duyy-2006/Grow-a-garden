-- Ensure the game is fully loaded before running anything
if not game:IsLoaded() then
    repeat
        game.Loaded:Wait()
    until game:IsLoaded()
end

-- Services and IDs for rejoining the same server on error
local TeleportService = game:GetService("TeleportService")
local PlaceId         = game.PlaceId
local JobId           = game.JobId

-- List of module URLs to load

local urls = {
    "https://raw.githubusercontent.com/Duyy-2006/Grow-a-garden/refs/heads/main/maru%20hatch%20pet",
    "https://raw.githubusercontent.com/Duyy-2006/Grow-a-garden/refs/heads/main/cosmetic",
    "https://raw.githubusercontent.com/Duyy-2006/Grow-a-garden/refs/heads/main/low%20fps",
    "https://raw.githubusercontent.com/Duyy-2006/Grow-a-garden/refs/heads/main/native",
    "https://raw.githubusercontent.com/Duyy-2006/Grow-a-garden/refs/heads/main/sell",
    "https://raw.githubusercontent.com/Duyy-2006/Grow-a-garden/refs/heads/main/add%20friend",
    "https://raw.githubusercontent.com/Duyy-2006/Grow-a-garden/refs/heads/main/change",
}

for _, url in ipairs(urls) do
    local ok, chunkOrErr = pcall(game.HttpGet, game, url)
    if not ok then
        warn(("Failed to download %q: %s – rejoining..."):format(url, chunkOrErr))
        TeleportService:TeleportToPlaceInstance(PlaceId, JobId)
        return
    end

    local fn, loadErr = loadstring(chunkOrErr)
    if not fn then
        warn(("Error compiling %q: %s – rejoining..."):format(url, loadErr))
        TeleportService:TeleportToPlaceInstance(PlaceId, JobId)
        return
    end

    -- Run each module in its own thread so a blocking loop inside one
    -- won't stop the others from loading.
    task.spawn(function()
        local success, runErr = pcall(fn)
        if not success then
            warn(("Error running %q: %s – rejoining..."):format(url, runErr))
            TeleportService:TeleportToPlaceInstance(PlaceId, JobId)
        end
    end)
end

print("All scripts dispatched successfully!")

